# Yaml is white-space sensitive (use 2 spaces to indent).

###
# Settings to apply to all windows.
#
# Docs regarding global: https://some-future-docs-link.com
global:
  # Whether to enable the browser devtools.
  enable_devtools: true

###
# Define a new window with an id of 'bar'. This window can then be opened
# via the Zebar cli by running 'zebar open bar'.
#
# Docs regarding window: https://some-future-docs-link.com
window/bar:
  providers: ['self']
  # Width of the window in physical pixels.
  width: '{{ Number(self.args.MONITOR_WIDTH) - 60 }}'
  # Height of the window in physical pixels.
  height: '30'
  # X-position of the window in physical pixels.
  position_x: '{{ Number(self.args.MONITOR_X) + 30 }}'
  # Y-position of the window in physical pixels.
  position_y: '{{ Number(self.args.MONITOR_Y) + 30 }}'

  # Whether to show the window above/below all others.
  # Allowed values: 'always_on_top', 'always_on_bottom', 'normal'.
  z_order: 'always_on_top'
  # Whether the window should be shown in the taskbar.
  show_in_taskbar: false
  # Whether the window should have resize handles.
  resizable: false
  # Styles to apply globally within the window. For example, we can use
  # this to import the Nerdfonts icon font. Ref https://www.nerdfonts.com/cheat-sheet
  # for a cheatsheet of available Nerdfonts icons.
  global_styles: |
    @import "https://www.nerdfonts.com/assets/css/webfont.css";
  # CSS/SCSS styles to apply to the root element within the window.
  styles: |
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: center;
    height: 100%;
    color: #d5c4a1;
    font-family: CommitMono Nerd Font, monospace;
    font-size: 13px;
    background: #32302f;
    border-radius: 7px;
  group/left:
    styles: |
      display: flex;
      align-items: center;
      margin-left: 5px;

    template/glazewm:
      styles: |
        display: flex;
        align-items: center;

        .workspace {
          width: 20px;
          height: 26px;
          background: transparent;
          border: none;
          margin-left: 2px;
          margin-right: 2px;
          color: #d5c4a1;
        }

        .workspace.active {
          color: #689d6A;
        }
      providers: ['glazewm']
      template: |
        <div class="component">
          @for (workspace of glazewm.workspacesOnMonitor) {
            <button class="workspace{{ workspace.focusIndex ? "" : " active" }}">{{ workspace.name }}</button>
          }
        </div>

  group/center:
    styles: |
      justify-self: center;

    template/host:
      providers: ['host']
      template: |
        {{ `${host.hostname} | ${ Math.round((host.uptime/(1000*60*60))%24) }:${ Math.round((host.uptime/(1000*60))%60) }:${ Math.round((host.uptime/1000)%60) }` }}

  group/right:
    styles: |
      justify-self: end;
      display: flex;
      margin-right: 10px;

      .template {
        margin-left: 20px;
      }

      i {
        margin-right: 7px;
      }

    template/memory:
      providers: ['memory']
      template: |
        <i class="nf nf-fae-chip"></i>
        {{ Math.round(memory.usage) }}%

    template/cpu:
      providers: ['cpu']
      styles: |
        .high-usage {
          color: #900029;
        }
      template: |
        <i class="nf nf-oct-cpu"></i>

        <!-- Change the text color if the CPU usage is high. -->
        @if (cpu.usage > 85) {
          <span class="high-usage">{{ `${Math.round(cpu.usage)}% ${cpu.frequency}` }}</span>
        } @else {
          <span>{{ Math.round(cpu.usage) }}%</span>
        }
    
    template/newnetwork:
      providers: ['newnetwork']
      template: |
        <span>test</span>
        <i class="nf nf-md-wifi_arrow_up"></i>{{ `${newnetwork.strength || "strength didn't work"} ` }} | 
        <i class="nf nf-md-wifi_arrow_down"></i>{{ `${newnetwork.name || "name didn't work"}` }}


    template/battery:
      providers: ['battery']
      styles: |
        position: relative;

        .charging-icon {
          position: absolute;
          font-size: 11px;
          left: 7px;
          top: 2px;
        }
      template: |
        <!-- Show icon for whether battery is charging. -->
        @if (battery.isCharging) {<i class="nf nf-md-power_plug charging-icon"></i>}

        <!-- Show icon for how much of the battery is charged. -->
        @if (battery.chargePercent > 90) {<i class="nf nf-fa-battery_4"></i>}
        @else if (battery.chargePercent > 70) {<i class="nf nf-fa-battery_3"></i>}
        @else if (battery.chargePercent > 40) {<i class="nf nf-fa-battery_2"></i>}
        @else if (battery.chargePercent > 20) {<i class="nf nf-fa-battery_1"></i>}
        @else {<i class="nf nf-fa-battery_0"></i>}

        {{ Math.round(battery.chargePercent) }}%

    template/weather:
      providers: ['weather']
      template: |
        @switch (weather.status) {
          @case ('clear_day') {<i class="nf nf-weather-day_sunny"></i>}
          @case ('clear_night') {<i class="nf nf-weather-night_clear"></i>}
          @case ('cloudy_day') {<i class="nf nf-weather-day_cloudy"></i>}
          @case ('cloudy_night') {<i class="nf nf-weather-night_alt_cloudy"></i>}
          @case ('light_rain_day') {<i class="nf nf-weather-day_sprinkle"></i>}
          @case ('light_rain_night') {<i class="nf nf-weather-night_alt_sprinkle"></i>}
          @case ('heavy_rain_day') {<i class="nf nf-weather-day_rain"></i>}
          @case ('heavy_rain_night') {<i class="nf nf-weather-night_alt_rain"></i>}
          @case ('snow_day') {<i class="nf nf-weather-day_snow"></i>}
          @case ('snow_night') {<i class="nf nf-weather-night_alt_snow"></i>}
          @case ('thunder_day') {<i class="nf nf-weather-day_lightning"></i>}
          @case ('thunder_night') {<i class="nf nf-weather-night_alt_lightning"></i>}
        }
        {{ weather.celsiusTemp }}Â°

    template/clock:
      providers: ['date']
      # Available date tokens: https://moment.github.io/luxon/#/formatting?id=table-of-tokens
      template: |
        {{ date.toFormat(date.now, 'tt EEE d MMM') + ` (${date.toFormat(date.now, 'W')})` }}
